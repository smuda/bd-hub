apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "bd.labelsWithoutVersion" . | nindent 4 }}
    component: cfssl
  name: {{ .Release.Name }}-blackduck-cfssl
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-8888
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    {{- include "bd.selectorLabelsWithoutVersion" . | nindent 4 }}
    component: cfssl
  type: ClusterIP
{{- if and .Values.enablePersistentStorage (not .Values.cfssl.persistentVolumeClaimName) }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    {{- include "bd.labelsWithoutVersion" . | nindent 4 }}
    component: pvc
  name: {{ .Release.Name }}-blackduck-cfssl
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.cfssl.claimSize }}
  {{- if .Values.cfssl.storageClass }}
  storageClassName: {{ .Values.cfssl.storageClass }}
  {{- else if .Values.storageClass }}
  storageClassName: {{ .Values.storageClass }}
  {{- end}}
  {{- if .Values.cfssl.volumeName }}
  volumeName: {{ .Values.cfssl.volumeName }}
  {{- end -}}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "bd.labels" . | nindent 4 }}
    component: cfssl
  {{- with .Values.deploymentAnnotations }}
  annotations: {{ . | toYaml | nindent 4}}
  {{- end }}
  name: {{ .Release.Name }}-blackduck-cfssl
  namespace: {{ .Release.Namespace }}
spec:
  {{- if eq .Values.status "Running" }}
  replicas: 1
  {{- else }}
  replicas: 0
  {{- end }}
  selector:
    matchLabels:
      {{- include "bd.selectorLabelsWithoutVersion" . | nindent 6 }}
      component: cfssl
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "bd.selectorLabels" . | nindent 8 }}
        component: cfssl
      annotations:
        checksum/blackduck-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.cfssl.podAnnotations }}
        {{- range $key, $value := .Values.cfssl.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      name: {{ .Release.Name }}-blackduck-cfssl
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-blackduck-config
        {{- if .Values.cfssl.registry }}
        image: {{ .Values.cfssl.registry }}/blackduck-cfssl:{{ .Values.cfssl.imageTag }}
        {{- else }}
        image: {{ .Values.registry }}/blackduck-cfssl:{{ .Values.cfssl.imageTag }}
        {{- end}}
        {{- include "customImagePullPolicy" .Values.cfssl | nindent 8 }}
        {{- include "cfsslLivenessProbe" . | nindent 8 }}
        name: cfssl
        ports:
        - containerPort: 8888
          protocol: TCP
        resources:
          {{- toYaml .Values.cfssl.resources | nindent 12 }}
        {{- with .Values.cfssl.securityContext }}
        securityContext:
{{ toYaml . | indent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /etc/cfssl
          name: dir-cfssl
      dnsPolicy: ClusterFirst
      {{- include "bd.imagePullSecrets" . | nindent 6 }}
      {{- with .Values.cfssl.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.cfssl.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.cfssl.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
      {{- end }}
      {{- if .Values.cfssl.podSecurityContext }}
      {{- with .Values.cfssl.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- else }}
      {{- include "bd.podSecurityContext" . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}-blackduck-service-account
      restartPolicy: Always
      volumes:
      {{- include "cfsslPersistentStorage" . | nindent 6 }}

{{- define "cfsslLivenessProbe" -}}
{{- if .Values.enableLivenessProbe -}}
livenessProbe:
  exec:
    command:
    - /usr/local/bin/docker-healthcheck.sh
    - http://localhost:8888/api/v1/cfssl/scaninfo
  failureThreshold: 10
  initialDelaySeconds: 240
  periodSeconds: 30
  successThreshold: 1
  timeoutSeconds: 10
{{- end -}}
{{- end -}}

{{- define "cfsslPersistentStorage" -}}
{{- if .Values.enablePersistentStorage -}}
- name: dir-cfssl
  persistentVolumeClaim:
    claimName: {{if .Values.cfssl.persistentVolumeClaimName}} {{.Values.cfssl.persistentVolumeClaimName}} {{else}} {{ .Release.Name }}-blackduck-cfssl {{end}}
{{- else -}}
- emptyDir: {}
  name: dir-cfssl
{{- end -}}
{{- end -}}
